name: dockercompose9631453983874023852
services:
  database.caching:
    container_name: database.caching
    environment:
      POSTGRES_DB: cachedb
      POSTGRES_PASSWORD: pass123
      POSTGRES_USER: user123
    image: postgres:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: volume
        source: db-cache
        target: /var/lib/postgresql/data
        volume: {}
  distributedcaching:
    build:
      context: C:\dev\Redis\src\DistributedCaching
      dockerfile: DistributedCaching/Dockerfile
    container_name: distributedcaching
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "5000"
      ASPNETCORE_HTTPS_PORTS: "5001"
    image: distributedcaching
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5000
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 5001
        published: "5001"
        protocol: tcp
      - mode: ingress
        target: 5000
        protocol: tcp
      - mode: ingress
        target: 5001
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Mayam\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Mayam\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  redis.caching:
    image: redis:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
networks:
  default:
    name: dockercompose9631453983874023852_default
volumes:
  db-cache:
    name: dockercompose9631453983874023852_db-cache